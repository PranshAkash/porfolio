@page "/skills"
@using Portfolio.Models
@inject IPortfolioService PortfolioService

@{
    var skills = PortfolioService.GetSkills();
    var skillsByCategory = skills.GroupBy(s => s.Category).ToList();
}

<!-- Skills Hero Section -->
<section class="section" style="padding-top: 0.5rem; margin-top: 0.5rem;">
    <div class="container">
        <div class="text-center mb-5">
            <h1 class="animate-fade-in-up">Technical Skills</h1>
            <p class="text-secondary animate-fade-in-up">My expertise across various technologies and domains</p>
        </div>
    </div>
</section>

<!-- Skills Overview -->
<section class="section">
    <div class="container">
        <div class="grid grid-4 text-center mb-5">
            <div class="card">
                <div class="skill-stat-icon">
                    <i class="fas fa-code"></i>
                </div>
                <h3 class="text-primary mb-2">@skills.Count(s => s.Category == Portfolio.Models.SkillCategory.Programming)</h3>
                <p class="mb-0">Programming Languages</p>
            </div>
            <div class="card">
                <div class="skill-stat-icon">
                    <i class="fas fa-layer-group"></i>
                </div>
                <h3 class="text-primary mb-2">@skills.Count(s => s.Category == Portfolio.Models.SkillCategory.Framework)</h3>
                <p class="mb-0">Frameworks & Libraries</p>
            </div>
            <div class="card">
                <div class="skill-stat-icon">
                    <i class="fas fa-database"></i>
                </div>
                <h3 class="text-primary mb-2">@skills.Count(s => s.Category == Portfolio.Models.SkillCategory.Database)</h3>
                <p class="mb-0">Database Technologies</p>
            </div>
            <div class="card">
                <div class="skill-stat-icon">
                    <i class="fas fa-cloud"></i>
                </div>
                <h3 class="text-primary mb-2">@(skills.Count(s => s.Category == Portfolio.Models.SkillCategory.DevOps) + skills.Count(s => s.Category == Portfolio.Models.SkillCategory.Cloud))</h3>
                <p class="mb-0">DevOps & Cloud</p>
            </div>
        </div>
    </div>
</section>

<!-- Skills by Category -->
<section class="section section-alt">
    <div class="container">
        @foreach (var categoryGroup in skillsByCategory.OrderBy(g => g.Key))
        {
            <div class="skill-category">
                <h2 class="text-center mb-4 text-primary">
                    @if (categoryGroup.Key == SkillCategory.Programming)
                    {
                        <i class="fas fa-code me-2"></i>
                        <text>Programming Languages</text>
                    }
                    else if (categoryGroup.Key == SkillCategory.Framework)
                    {
                        <i class="fas fa-layer-group me-2"></i>
                        <text>Frameworks & Libraries</text>
                    }
                    else if (categoryGroup.Key == SkillCategory.Database)
                    {
                        <i class="fas fa-database me-2"></i>
                        <text>Database Technologies</text>
                    }
                    else if (categoryGroup.Key == SkillCategory.DevOps)
                    {
                        <i class="fas fa-cogs me-2"></i>
                        <text>DevOps & Infrastructure</text>
                    }
                    else if (categoryGroup.Key == SkillCategory.Cloud)
                    {
                        <i class="fas fa-cloud me-2"></i>
                        <text>Cloud Services</text>
                    }
                    else if (categoryGroup.Key == SkillCategory.Tools)
                    {
                        <i class="fas fa-tools me-2"></i>
                        <text>Development Tools</text>
                    }
                </h2>
                
                <div class="skills-grid">
                    @foreach (var skill in categoryGroup.OrderByDescending(s => s.Proficiency))
                    {
                        <div class="skill-card">
                            <div class="skill-header">
                                <div class="skill-icon">
                                    <i class="@skill.Icon"></i>
                                </div>
                                <div class="skill-info">
                                    <h5 class="skill-name">@skill.Name</h5>
                                    <div class="skill-proficiency">@skill.Proficiency%</div>
                                </div>
                            </div>
                            
                            <div class="skill-progress">
                                <div class="skill-progress-bar" style="width: @(skill.Proficiency)%"></div>
                            </div>
                            
                            @if (!string.IsNullOrEmpty(skill.Description))
                            {
                                <p class="skill-description">@skill.Description</p>
                            }
                            
                            <div class="skill-level">
                                @if (skill.Proficiency >= 90)
                                {
                                    <text>Expert</text>
                                }
                                else if (skill.Proficiency >= 75)
                                {
                                    <text>Advanced</text>
                                }
                                else if (skill.Proficiency >= 60)
                                {
                                    <text>Intermediate</text>
                                }
                                else
                                {
                                    <text>Beginner</text>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</section>

<!-- Skill Proficiency Legend -->
<section class="section">
    <div class="container">
        <div class="text-center mb-5">
            <h2>Proficiency Levels</h2>
            <p class="text-secondary">Understanding my skill ratings</p>
        </div>
        
        <div class="grid grid-4">
            <div class="proficiency-card expert">
                <div class="proficiency-icon">
                    <i class="fas fa-star"></i>
                </div>
                <h5>Expert (90-100%)</h5>
                <p>Advanced knowledge with extensive experience. Can mentor others and solve complex problems.</p>
            </div>
            
            <div class="proficiency-card advanced">
                <div class="proficiency-icon">
                    <i class="fas fa-medal"></i>
                </div>
                <h5>Advanced (75-89%)</h5>
                <p>Strong practical experience with deep understanding. Can work independently on complex tasks.</p>
            </div>
            
            <div class="proficiency-card intermediate">
                <div class="proficiency-icon">
                    <i class="fas fa-thumbs-up"></i>
                </div>
                <h5>Intermediate (60-74%)</h5>
                <p>Good working knowledge with hands-on experience. Can complete most tasks with minimal guidance.</p>
            </div>
            
            <div class="proficiency-card beginner">
                <div class="proficiency-icon">
                    <i class="fas fa-seedling"></i>
                </div>
                <h5>Beginner (50-59%)</h5>
                <p>Basic understanding with some practical experience. Still learning and improving.</p>
            </div>
        </div>
    </div>
</section>

<!-- Learning & Development -->
<section class="section section-alt">
    <div class="container">
        <div class="text-center mb-5">
            <h2>Continuous Learning</h2>
            <p class="text-secondary">Always expanding my skill set</p>
        </div>
        
        <div class="grid grid-3">
            <div class="card">
                <div class="learning-icon">
                    <i class="fas fa-brain"></i>
                </div>
                <h4>AI & Machine Learning</h4>
                <p>Currently exploring Large Language Models (LLMs) and AI integration in development workflows.</p>
                <div class="learning-status">
                    <span class="status-badge learning">Learning</span>
                </div>
            </div>
            
            <div class="card">
                <div class="learning-icon">
                    <i class="fab fa-aws"></i>
                </div>
                <h4>AWS Cloud Services</h4>
                <p>Expanding cloud expertise beyond Azure to include AWS services and multi-cloud strategies.</p>
                <div class="learning-status">
                    <span class="status-badge planned">Planned</span>
                </div>
            </div>
            
            <div class="card">
                <div class="learning-icon">
                    <i class="fas fa-mobile-alt"></i>
                </div>
                <h4>Mobile Development</h4>
                <p>Planning to learn React Native and .NET MAUI for cross-platform mobile application development.</p>
                <div class="learning-status">
                    <span class="status-badge planned">Planned</span>
                </div>
            </div>
        </div>
    </div>
</section>



<style>
    .text-primary { color: var(--primary-color) !important; }
    .text-secondary { color: var(--text-secondary) !important; }
    .mb-0 { margin-bottom: 0; }
    .mb-2 { margin-bottom: 0.5rem; }
    .mb-4 { margin-bottom: 1.5rem; }
    .me-2 { margin-right: 0.5rem; }
    
    .skill-stat-icon {
        width: 4rem;
        height: 4rem;
        background: var(--primary-color);
        color: white;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        margin: 0 auto 1rem auto;
    }
    
    .skill-category {
        margin-bottom: 4rem;
    }
    
    .skills-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.5rem;
    }
    
    .skill-card {
        background: var(--bg-primary);
        border: 1px solid var(--border-color);
        border-radius: 1rem;
        padding: 1.5rem;
        transition: all 0.3s ease;
    }
    
    .skill-card:hover {
        border-color: var(--primary-color);
        transform: translateY(-3px);
        box-shadow: var(--shadow-lg);
    }
    
    .skill-header {
        display: flex;
        align-items: center;
        margin-bottom: 1rem;
    }
    
    .skill-icon {
        width: 3rem;
        height: 3rem;
        background: rgba(37, 99, 235, 0.1);
        color: var(--primary-color);
        border-radius: 0.75rem;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        margin-right: 1rem;
    }
    
    .skill-info {
        flex: 1;
    }
    
    .skill-name {
        margin-bottom: 0.25rem;
        font-weight: 600;
        color: var(--text-primary);
    }
    
    .skill-proficiency {
        font-size: 0.875rem;
        color: var(--text-secondary);
        font-weight: 500;
    }
    
    .skill-progress {
        width: 100%;
        height: 0.5rem;
        background: var(--border-color);
        border-radius: 0.25rem;
        overflow: hidden;
        margin-bottom: 1rem;
    }
    
    .skill-progress-bar {
        height: 100%;
        background: linear-gradient(90deg, var(--primary-color), var(--accent-color));
        transition: width 1s ease;
        border-radius: 0.25rem;
    }
    
    .skill-description {
        font-size: 0.875rem;
        color: var(--text-secondary);
        margin-bottom: 1rem;
        line-height: 1.5;
    }
    
    .skill-level {
        font-size: 0.875rem;
        font-weight: 600;
        color: var(--primary-color);
        text-align: center;
        padding: 0.5rem;
        background: rgba(37, 99, 235, 0.1);
        border-radius: 0.5rem;
    }
    
    .proficiency-card {
        text-align: center;
        padding: 2rem;
        border-radius: 1rem;
        border: 2px solid;
        transition: all 0.3s ease;
    }
    
    .proficiency-card.expert {
        border-color: #10b981;
        background: rgba(16, 185, 129, 0.05);
    }
    
    .proficiency-card.advanced {
        border-color: #3b82f6;
        background: rgba(59, 130, 246, 0.05);
    }
    
    .proficiency-card.intermediate {
        border-color: #f59e0b;
        background: rgba(245, 158, 11, 0.05);
    }
    
    .proficiency-card.beginner {
        border-color: #ef4444;
        background: rgba(239, 68, 68, 0.05);
    }
    
    .proficiency-icon {
        width: 4rem;
        height: 4rem;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        margin: 0 auto 1rem auto;
        color: white;
    }
    
    .proficiency-card.expert .proficiency-icon {
        background: #10b981;
    }
    
    .proficiency-card.advanced .proficiency-icon {
        background: #3b82f6;
    }
    
    .proficiency-card.intermediate .proficiency-icon {
        background: #f59e0b;
    }
    
    .proficiency-card.beginner .proficiency-icon {
        background: #ef4444;
    }
    
    .learning-icon {
        width: 4rem;
        height: 4rem;
        background: var(--primary-color);
        color: white;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        margin: 0 auto 1rem auto;
    }
    
    .learning-status {
        margin-top: 1rem;
        text-align: center;
    }
    
    .status-badge {
        padding: 0.5rem 1rem;
        border-radius: 1rem;
        font-size: 0.875rem;
        font-weight: 600;
    }
    
    .status-badge.learning {
        background: rgba(16, 185, 129, 0.1);
        color: #10b981;
    }
    
    .status-badge.planned {
        background: rgba(245, 158, 11, 0.1);
        color: #f59e0b;
    }
</style>
